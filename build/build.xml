<project name="HelloWorld" basedir="." default="main" xmlns:sonar="antlib:org.sonar.ant">

		<!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
  <property name="sonar.host.url" value="http://localhost:9000" />
  <property name="sonar.projectKey" value="org.codehaus.sonar:example-java-ant" />
  <property name="sonar.projectName" value="Simple Java Project analyzed with the SonarQube Ant Task" />
  <property name="sonar.projectVersion" value="1.0" />
  <property name="sonar.sources" value="src" />
  <property name="sonar.java.binaries" value="build" />
  <property name="sonar.java.libraries" value="lib/*.jar" />
  <property name="test.src.dir" value="src/test"/>

  <property name="src.dir" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="reports.dir" value="reports"/>
  
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="jar.dir" value="${build.dir}/jar"/>
  <property name="main-class" value="HelloWorld"/>
  
<path id="classpath.test">
    <pathelement location="lib/junit-4.12.jar"/>
	<pathelement location="lib/hamcrest-core-1.3.jar"/>
	<pathelement location="${build.dir}/jar"/>
  </path>

  <target name="clean" description="Deletes directories that the build will create.">
    <delete dir="${build.dir}"/>
	<delete dir="${reports.dir}"/>
	<mkdir dir="${reports.dir}"/>
      </target>
	  
  <target name="compile" description="Compiles all .java files.">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}">
	<classpath refid="classpath.test"/>
	</javac>
  </target>

  <target name="jar" depends="compile" description="Creates the JAR file with a Main-Class.">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar" description="Runs the main-class in the JAR file.">
    
	<java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
	<junit haltonfailure="false" printsummary="true">
		<classpath>
          <path refid="classpath.test"/>
          <pathelement location="${build.dir}/classes"/>
        </classpath>
		<batchtest haltonfailure ="false" fork="true" todir="reports">
			<fileset dir="${test.src.dir}" includes="**/*Test.java" />
		</batchtest>
		<formatter type="xml"/>
	</junit>
  </target>

  <target name="clean-build" depends="clean,jar" description="Could clean up!"/>

  <target name="main" depends="clean,run"/>
  
  <!-- Define the SonarQube target -->
  <target name="sonar">
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
        <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
        <classpath path="path/to/sonar/ant/task/lib/sonarqube-ant-task-*.jar" />
    </taskdef>
 
    <!-- Execute the SonarQube analysis -->
    <sonar:sonar />
  </target>
  

</project>